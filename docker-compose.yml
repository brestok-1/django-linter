version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    command: /start
    volumes:
      - .:/djangolinter
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - rabbitmq

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"

  redis:
    image: redis
    ports:
      - "6379:6379"

  rabbitmq:
    restart: always
    image: rabbitmq
    env_file:
      - .env
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/djangolinter
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - rabbitmq

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    command: /start-celerybeat
    volumes:
      - .:/djangolinter
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - rabbitmq

  flower:
    build:
      context: .
      dockerfile: compose/local/django/Dockerfile
    command: /start-flower
    volumes:
      - .:/djangolinter
    env_file:
      - .env
    ports:
      - 5555:5555
    depends_on:
      - redis
      - db
      - rabbitmq

volumes:
  postgres_data:
  rabbitmq_data: